--
-- NOTE: TESTS IN THESE FILE WILL BE MOVED TO EXISTING TEST FILES ONCE THEY ARE UPDATED.
--
LOAD 'age'; SET search_path TO ag_catalog;
--
-- Tests vertex\edge ID, ID sequences label_id column
--
SELECT create_graph('graph1');
NOTICE:  graph "graph1" has been created
 create_graph 
--------------
 
(1 row)

-- show vertex and edge relation information
\d+ graph1._ag_label_vertex;
                                                                           Table "graph1._ag_label_vertex"
   Column   |   Type    | Collation | Nullable |                                           Default                                            | Storage  | Stats target | Description 
------------+-----------+-----------+----------+----------------------------------------------------------------------------------------------+----------+--------------+-------------
 id         | bigint    |           | not null | nextval('graph1.vertex_id_seq'::regclass)                                                    | plain    |              | 
 properties | agtype    |           | not null | agtype_build_map()                                                                           | extended |              | 
 label_id   | integer[] |           | not null | agtype_to_int4_array(agtype_build_list(_label_id('graph1'::name, '_ag_label_vertex'::name))) | extended |              | 
Indexes:
    "_ag_label_vertex_pkey" PRIMARY KEY, btree (id)

\d+ graph1._ag_label_edge;
                                                                             Table "graph1._ag_label_edge"
     Column     |   Type    | Collation | Nullable |                                          Default                                           | Storage  | Stats target | Description 
----------------+-----------+-----------+----------+--------------------------------------------------------------------------------------------+----------+--------------+-------------
 id             | bigint    |           | not null | nextval('graph1.edge_id_seq'::regclass)                                                    | plain    |              | 
 start_id       | bigint    |           | not null |                                                                                            | plain    |              | 
 end_id         | bigint    |           | not null |                                                                                            | plain    |              | 
 properties     | agtype    |           | not null | agtype_build_map()                                                                         | extended |              | 
 label_id       | integer[] |           | not null | agtype_to_int4_array(agtype_build_list(_label_id('graph1'::name, '_ag_label_edge'::name))) | extended |              | 
 start_label_id | integer[] |           | not null |                                                                                            | extended |              | 
 end_label_id   | integer[] |           | not null |                                                                                            | extended |              | 
Indexes:
    "_ag_label_edge_pkey" PRIMARY KEY, btree (id)

SELECT * FROM cypher('graph1',
$$
		CREATE (:Teacher{name:'John'})-[:Teaches{from:2011}]->(:Class{title:'DS'}),
		(:Student{name:'Smith'})-[:Learns{from:2013}]->(:Class{title:'AI'}),
		({name:'Bob'})-[:Learns{from:2022}]->({title:'Swimming'})
$$)
as (a agtype);
 a 
---
(0 rows)

-- labels
SELECT name, id, kind, relation, seq_name
FROM ag_catalog.ag_label
WHERE graph IN (
    SELECT graphid
    FROM ag_catalog.ag_graph
    WHERE name = 'graph1'
)
ORDER BY id;
       name       | id | kind |        relation         |   seq_name    
------------------+----+------+-------------------------+---------------
 _ag_label_vertex |  1 | v    | graph1._ag_label_vertex | vertex_id_seq
 _ag_label_edge   |  2 | e    | graph1._ag_label_edge   | edge_id_seq
 Teacher          |  3 | v    | graph1."Teacher"        | vertex_id_seq
 Teaches          |  4 | e    | graph1."Teaches"        | edge_id_seq
 Class            |  5 | v    | graph1."Class"          | vertex_id_seq
 Student          |  6 | v    | graph1."Student"        | vertex_id_seq
 Learns           |  7 | e    | graph1."Learns"         | edge_id_seq
(7 rows)

-- vertices
SELECT * FROM graph1._ag_label_vertex ORDER BY id;
 id |      properties       | label_id 
----+-----------------------+----------
  1 | {"name": "John"}      |        3
  2 | {"title": "DS"}       |        5
  3 | {"name": "Smith"}     |        6
  4 | {"title": "AI"}       |        5
  5 | {"name": "Bob"}       |        1
  6 | {"title": "Swimming"} |        1
(6 rows)

-- edges
SELECT * FROM graph1._ag_label_edge ORDER BY id;
 id | start_id | end_id |   properties   | label_id | start_label_id | end_label_id 
----+----------+--------+----------------+----------+----------------+--------------
  1 |        1 |      2 | {"from": 2011} |        4 |              3 |            5
  2 |        3 |      4 | {"from": 2013} |        7 |              6 |            5
  3 |        5 |      6 | {"from": 2022} |        7 |              1 |            1
(3 rows)

-- test vertex, edge and path object
SELECT * FROM cypher('graph1', $$ MATCH (x) RETURN x $$) AS (result agtype);
                                 result                                 
------------------------------------------------------------------------
 {"id": 5, "label": "", "properties": {"name": "Bob"}}::vertex
 {"id": 6, "label": "", "properties": {"title": "Swimming"}}::vertex
 {"id": 1, "label": "Teacher", "properties": {"name": "John"}}::vertex
 {"id": 2, "label": "Class", "properties": {"title": "DS"}}::vertex
 {"id": 4, "label": "Class", "properties": {"title": "AI"}}::vertex
 {"id": 3, "label": "Student", "properties": {"name": "Smith"}}::vertex
(6 rows)

SELECT * FROM cypher('graph1', $$ MATCH ()-[e]->() RETURN e $$) AS (result agtype);
                                                                                             result                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 1, "label": "Teaches", "end_id": 2, "start_id": 1, "properties": {"from": 2011}, "end_label_id": 5, "end_label_name": "Class", "start_label_id": 3, "start_label_name": "Teacher"}::edge
 {"id": 2, "label": "Learns", "end_id": 4, "start_id": 3, "properties": {"from": 2013}, "end_label_id": 5, "end_label_name": "Class", "start_label_id": 6, "start_label_name": "Student"}::edge
 {"id": 3, "label": "Learns", "end_id": 6, "start_id": 5, "properties": {"from": 2022}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge
(3 rows)

SELECT * FROM cypher('graph1', $$ MATCH p = ()-[]->() RETURN p $$) AS (result agtype);
                                                                                                                                                                       result                                                                                                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 1, "label": "Teacher", "properties": {"name": "John"}}::vertex, {"id": 1, "label": "Teaches", "end_id": 2, "start_id": 1, "properties": {"from": 2011}, "end_label_id": 5, "end_label_name": "Class", "start_label_id": 3, "start_label_name": "Teacher"}::edge, {"id": 2, "label": "Class", "properties": {"title": "DS"}}::vertex]::path
 [{"id": 3, "label": "Student", "properties": {"name": "Smith"}}::vertex, {"id": 2, "label": "Learns", "end_id": 4, "start_id": 3, "properties": {"from": 2013}, "end_label_id": 5, "end_label_name": "Class", "start_label_id": 6, "start_label_name": "Student"}::edge, {"id": 4, "label": "Class", "properties": {"title": "AI"}}::vertex]::path
 [{"id": 5, "label": "", "properties": {"name": "Bob"}}::vertex, {"id": 3, "label": "Learns", "end_id": 6, "start_id": 5, "properties": {"from": 2022}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge, {"id": 6, "label": "", "properties": {"title": "Swimming"}}::vertex]::path
(3 rows)

SELECT drop_graph('graph1', true);
NOTICE:  drop cascades to 9 other objects
DETAIL:  drop cascades to sequence graph1.vertex_id_seq
drop cascades to table graph1._ag_label_vertex
drop cascades to sequence graph1.edge_id_seq
drop cascades to table graph1._ag_label_edge
drop cascades to table graph1."Teacher"
drop cascades to table graph1."Teaches"
drop cascades to table graph1."Class"
drop cascades to table graph1."Student"
drop cascades to table graph1."Learns"
NOTICE:  graph "graph1" has been dropped
 drop_graph 
------------
 
(1 row)

